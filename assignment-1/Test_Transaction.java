import static org.junit.Assert.*;
import org.junit.Test;

public class Test_Transaction {
	@Test
	public void createTransaction() {
		Transaction a = new Transaction("Online Banking transfer", 200);
		
		assertEquals("New Online Banking transfer Transaction with 200", 200.0, a.getAmount(), 0.0000001);
		assertEquals("New Online Banking transfer Transaction with 200", "Online Banking transfer", a.getDescription());
	}
	
	@Test
	public void transactionFromTransfer() {
		Customer a = new Customer("Yunfan", 2034523);
		BankAccount b = new SavingsAccount(a, 124084945, 10, 2);
		BankAccount c = new SavingsAccount(a, 395895038, 10, 2);
		b.deposit(2000);
		
		b.transfer(100, c);
		
		assertEquals("Transaction generated by transfer, transaction list has one transaciton", 1, b.getTransactions().size());
		assertEquals("Transaction generated by transfer, transaction list has one transaciton", 1, c.getTransactions().size());
		
		Transaction x = b.getTransactions().get(0);
		
		assertEquals("Transaction generated by transfer, first transaction with amount of 100", 100.0, x.getAmount(), 0.000001);
	}
	
	@Test
	public void transactionE_Transfer() {
		Customer a = new Customer("Yunfan", 2034523);
		BankAccount b = new SavingsAccount(a, 124084945, 10, 2);

		Customer c = new Customer("George", 2149053);
		BankAccount d = new SavingsAccount(c, 395895038, 10, 2);
		b.deposit(2000);
		
		b.transfer(100, d);
		
		assertEquals("Transaction generated by transfer, transaction list has one transaciton", 1, b.getTransactions().size());
		assertEquals("Transaction generated by transfer, transaction list has one transaciton", 1, d.getTransactions().size());
		
		Transaction x = b.getTransactions().get(0);
		
		assertEquals("Transaction generated by transfer, first transaction with amount of 100", 100.0, x.getAmount(), 0.000001);
	}
}
